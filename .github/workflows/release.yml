name: Release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        type: choice
        options:
          - minor
          - patch
        default: minor
        required: true
        description: 'patch: v0.0.X, minor: v0.X.0'
      debug:
        type: boolean
        default: true
        description: 'executes the workflow in debug mode (skip publishing tag, release and docker image)'

jobs:
  check-permission:
    name: Check permission
    if: contains(github.ref, 'refs/heads/master')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check user permission
        uses: actions-cool/check-user-permission@v2.2.0
        id: check
        with:
          require: 'write'
    outputs:
      hasWritePermission: ${{ steps.check.outputs.require-result }}

  publish-tag:
    name: Publish tag
    needs: check-permission
    if: contains(needs.check-permission.outputs.hasWritePermission, 'true')
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout prebid cache
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create & publish tag
        id: release
        run: |
          currentTag=$(git describe --abbrev=0 --tags)
          echo "current release tag ${currentTag}"

          nextTag=''
          releaseType=${{ inputs.releaseType }}
          if [ $releaseType == "minor" ]; then
            # increment minor version and reset patch version
            nextTag=$(echo "${currentTag}" | awk -F. '{OFS="."; $2+=1; $3=0; print $0}')
          else
            # increment patch version
            nextTag=$(echo "${currentTag}" | awk -F. '{OFS="."; $3+=1; print $0}')
          fi

          git tag $nextTag
          git push origin $nextTag
          echo "tag=${nextTag}" >> $GITHUB_OUTPUT
    outputs:
      releaseTag: ${{ steps.release.outputs.tag }}

  publish-release:
    name: Publish release
    needs: publish-tag
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout prebid cache
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create & publish release
        uses: release-drafter/release-drafter@v5.22.0
        with:
          name: ${{ needs.publish-tag.outputs.releaseTag }}
          tag: ${{ needs.publish-tag.outputs.releaseTag }}
          version: ${{ needs.publish-tag.outputs.releaseTag }}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}